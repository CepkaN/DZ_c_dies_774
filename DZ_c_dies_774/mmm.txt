class Matrix
        {
            public int _x;
            public int _y;
            public int[,] mass;

            public Matrix(int x, int y)
            {
                _x = x;
                _y = y;
                mass = new int[_x, _y];
                Random rnd = new Random();
                int Randomize = rnd.Next(1, 10);
                for (int i = 0; i < _x; ++i)
                {
                    for (int j = 0; j < _y; ++j)
                        mass[i, j] = rnd.Next(1, 10);
                }
            }
            public Matrix(int[,] m, int x, int y)
            {
                mass = m; _x = x; _y = y;
            }
            public void Mostra()
            {
                for (int i = 0; i < _x; ++i)
                {
                    for (int j = 0; j < _y; ++j)
                    { Console.Write(mass[i, j] + " "); }
                    Console.WriteLine();
                }
                Console.WriteLine();

            }
            public static Matrix operator +(Matrix m1, Matrix m2)
            {
                if (m1._x != m2._x && m1._y != m2._y)
                {
                    Console.WriteLine("Ошибка");
                    return m1;
                }
                int[,] m3 = new int[m1._x, m1._y];
                for (int i = 0; i < m1._x; ++i)
                {
                    for (int j = 0; j < m1._y; ++j)
                    { m3[i, j] = m1.mass[i, j] + m2.mass[i, j]; }
                }
                return new Matrix(m3, m1._x, m1._y);
            }
            public static Matrix operator -(Matrix m1, Matrix m2)
            {
                if (m1._x != m2._x && m1._y != m2._y)
                {
                    Console.WriteLine("Ошибка");
                    return m1;
                }
                int[,] m3 = new int[m1._x, m1._y];
                for (int i = 0; i < m1._x; ++i)
                {
                    for (int j = 0; j < m1._y; ++j)
                    { m3[i, j] = m1.mass[i, j] - m2.mass[i, j]; }
                }
                return new Matrix(m3, m1._x, m1._y);
            }
            public static Matrix operator *(Matrix m1, Matrix m2)
            {
                if (m1._x != m2._x && m1._y != m2._y)
                {
                    Console.WriteLine("Ошибка");
                    return m1;
                }
                int[,] m3 = new int[m1._y, m2._x];

                for (int i = 0; i < m1._x; ++i)
                {
                    for (int j = 0; j < m2._y; ++j)
                    {
                        m3[i, j] = 0;

                        for (int k = 0; k < m1._y; ++k)
                        {
                            m3[i, j] += m1.mass[i, k] * m2.mass[k, j];
                        }
                    }
                }
                return new Matrix(m3, m1._y, m2._x);
            }
            public static Matrix operator *(Matrix m1, int a)
            {
                int[,] m3 = new int[m1._x, m1._y];
                for (int i = 0; i < m1._x; ++i)
                {
                    for (int j = 0; j < m1._y; ++j)
                    { m3[i, j] = m1.mass[i, j] * a; }
                }
                return new Matrix(m3, m1._x, m1._y);
            }
        }